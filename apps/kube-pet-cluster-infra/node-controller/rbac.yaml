---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kube-pet-node-controller
rules:

- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["watch","list","patch"]

- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests"]
  verbs: ["watch","list"]

- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests/approval"]
  verbs: ["update"]
# Starting in Kubernetes 1.18, approval ^^
# also needs signer 'approve' access    vv
- apiGroups: ["certificates.k8s.io"]
  resources: ["signers"]
  resourceNames: ["kubernetes.io/kubelet-serving"]
  verbs: ["approve"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kube-pet-node-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-pet-node-controller
subjects:
- kind: ServiceAccount
  name: pet-node-controller

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: pet-node-ctlr-configmaps
rules:

- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["watch","list","create","replace","patch","update"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: pet-node-ctlr-configmaps
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pet-node-ctlr-configmaps
subjects:
- kind: ServiceAccount
  name: pet-node-controller
